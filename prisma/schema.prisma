// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique @db.VarChar(255)
  name     String  @db.VarChar(255)
  password String
  phone    String? @unique @db.VarChar(15)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions  Session[]
  products  Product[]
  suppliers Supplier[]
  sales     Sale[]
}

model Session {
  id     Int    @id @default(autoincrement())
  userId Int
  token  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  photo       String?
  quantity    Int
  price       Decimal
  description String?

  supplierId Int?
  userId     Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  supplier     Supplier?      @relation(fields: [supplierId], references: [id])
  user         User           @relation(fields: [userId], references: [id])
  saleProducts SaleProducts[]
}

model Supplier {
  id      Int     @id @default(autoincrement())
  name    String
  phone   String? @unique @db.VarChar(15)
  address String?
  email   String? @unique @db.VarChar(255)
  userId  Int

  products Product[]
  user     User      @relation(fields: [userId], references: [id])
}

model SaleProducts {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Decimal
  productId Int
  saleId    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  sale    Sale    @relation(fields: [saleId], references: [id])
}

model Sale {
  id     Int @id @default(autoincrement())
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user           User           @relation(fields: [userId], references: [id])
  saleProducts   SaleProducts[]
  payment        Payment?
  saleProductsId Int?
}

enum PaymentStatus {
  PENDING
  PAID
  CANCELED
}

enum PaymentMethod {
  CASH
  CARD
}

model Payment {
  id       Int           @id @default(autoincrement())
  amount   Decimal
  status   PaymentStatus
  method   PaymentMethod
  stripeId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sale   Sale? @relation(fields: [saleId], references: [id])
  saleId Int   @unique
}
